[metadata]
# This includes the license file(s) in the wheel.
# https://wheel.readthedocs.io/en/stable/user_guide.html#including-license-files-in-the-generated-wheel-file
license_files = LICENSE.txt

[bdist_wheel]
# This flag says to generate wheels that support both Python 2 and Python
# 3. If your code will not run unchanged on both Python 2 and 3, you will
# need to generate separate wheels for each Python version that you
# support. Removing this line (or setting universal to 0) will prevent
# bdist_wheel from trying to make a universal wheel. For more see:
# https://packaging.python.org/guides/distributing-packages-using-setuptools/#wheels
universal = 0

[tool:pytest]
addopts =
    --cov=he
    --cov-report term-missing
    --cov-report xml
    --cov-append
    --failed-first
    --exitfirst
;log_cli = true
;log_cli_level = DEBUG
testpaths = tests
nonrecursedirs =
    fixtures
    hypothesis

[coverage:run]
source = he
branch = True

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
# Have to re-enable the standard pragma
    pragma: no cover

# Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

# Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

# Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

# Don't complain about example-code:
    def enjoy_
sort = BrPart

[mypy]
mypy_path = src/

[flake8]
exclude = .*,*.egg,build,data,dist,trash
select = E,W,F
max-complexity = 10
# E501 = disable "line too long"
ignore = E501
